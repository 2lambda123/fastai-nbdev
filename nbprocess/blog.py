# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/15_blog.ipynb.

# %% auto 0
__all__ = ['cat_slug', 'file_slug', 'migrate_fp_fm']

# %% ../nbs/15_blog.ipynb 3
from .processors import md_fmdict, construct_fm, insert_frontmatter, is_frontmatter
from .read import read_nb
from .sync import write_nb
from fastcore.all import *
from json import loads

# %% ../nbs/15_blog.ipynb 4
def _get_fm(path): return md_fmdict(read_nb(path), remove=False)
def _get_raw_fm(nb): 
    return first(nb.cells.filter(lambda x: x.cell_type == 'raw')).source

# %% ../nbs/15_blog.ipynb 5
def cat_slug(fmdict):
    "Get the partial slug from the category front matter."
    cats = [c for c in fmdict.get('categories', '').strip().strip('][').split(', ') if c]
    return '/' + '/'.join(sorted(cats)) if cats else ''

# %% ../nbs/15_blog.ipynb 8
def file_slug(fname): 
    "Get the partial slug from the filename."
    p = Path(fname)
    dt = '/'+p.name[:10].replace('-', '/')+'/'
    return dt + p.stem[11:]    

# %% ../nbs/15_blog.ipynb 10
def migrate_fp_fm(path, overwrite=True):
    "Migrate fastpages front matter to a raw cell for nbdev."
    nb = read_nb(path)
    if is_frontmatter(nb): return None
    fm = md_fmdict(nb)
    if 'permalink' in fm: fm['aliases'] = '[' + fm.pop('permalink').strip() + ']'
    else: fm['aliases'] = '[' + cat_slug(fm) + file_slug(path) + ']'
    insert_frontmatter(nb, fm_dict=fm)
    if overwrite: write_nb(nb, path)
    return nb
