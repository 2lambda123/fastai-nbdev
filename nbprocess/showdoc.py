# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/08_showdoc.ipynb.

# %% auto 0
__all__ = ['get_name', 'qual_name', 'show_doc']

# %% ../nbs/08_showdoc.ipynb 3
from fastcore.docments import *
import inspect

try:
    from IPython.display import Markdown,display
    from IPython.core import page
except ImportError: pass

# %% ../nbs/08_showdoc.ipynb 4
def get_name(obj):
    "Get the name of `obj`"
    if hasattr(obj, '__name__'):       return obj.__name__
    elif getattr(obj, '_name', False): return obj._name
    elif hasattr(obj,'__origin__'):    return str(obj.__origin__).split('.')[-1] #for types
    elif type(obj)==property:          return _get_property_name(obj)
    else:                              return str(obj).split('.')[-1]

# %% ../nbs/08_showdoc.ipynb 5
def qual_name(obj):
    "Get the qualified name of `obj`"
    if hasattr(obj,'__qualname__'): return obj.__qualname__
    if inspect.ismethod(obj):       return f"{get_name(obj.__self__)}.{get_name(fn)}"
    return get_name(obj)

# %% ../nbs/08_showdoc.ipynb 6
def show_doc(sym, disp:bool=True):
    "Show documentation for `sym`"
    nm = qual_name(sym)
    doc = f'#### {nm}\n\n> **{nm}** {inspect.signature(sym)}'
    docs = docstring(sym)
    if docs: doc += f"\n\n{docs}"
    if disp: display(Markdown(doc))
    else: return doc
