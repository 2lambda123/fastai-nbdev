# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/',
                'doc_host': 'https://nbdev.fast.ai',
                'git_url': 'https://github.com/fastai/nbdev',
                'lib_path': 'nbdev'},
  'syms': { 'nbdev.clean': { 'nbdev.clean._add_jupyter_hooks': ('clean.html#_add_jupyter_hooks', 'nbdev/clean.py'),
                             'nbdev.clean._clean_cell': ('clean.html#_clean_cell', 'nbdev/clean.py'),
                             'nbdev.clean._clean_cell_output': ('clean.html#_clean_cell_output', 'nbdev/clean.py'),
                             'nbdev.clean._clean_cell_output_id': ('clean.html#_clean_cell_output_id', 'nbdev/clean.py'),
                             'nbdev.clean._git_root': ('clean.html#_git_root', 'nbdev/clean.py'),
                             'nbdev.clean._nbdev_clean': ('clean.html#_nbdev_clean', 'nbdev/clean.py'),
                             'nbdev.clean._reconfigure': ('clean.html#_reconfigure', 'nbdev/clean.py'),
                             'nbdev.clean.clean_jupyter': ('clean.html#clean_jupyter', 'nbdev/clean.py'),
                             'nbdev.clean.clean_nb': ('clean.html#clean_nb', 'nbdev/clean.py'),
                             'nbdev.clean.nbdev_clean': ('clean.html#nbdev_clean', 'nbdev/clean.py'),
                             'nbdev.clean.nbdev_install_hooks': ('clean.html#nbdev_install_hooks', 'nbdev/clean.py'),
                             'nbdev.clean.nbdev_trust': ('clean.html#nbdev_trust', 'nbdev/clean.py'),
                             'nbdev.clean.process_write': ('clean.html#process_write', 'nbdev/clean.py')},
            'nbdev.cli': { 'nbdev.cli._render_nb': ('cli.html#_render_nb', 'nbdev/cli.py'),
                           'nbdev.cli._update_repo_meta': ('cli.html#_update_repo_meta', 'nbdev/cli.py'),
                           'nbdev.cli.chelp': ('cli.html#chelp', 'nbdev/cli.py'),
                           'nbdev.cli.extract_tgz': ('cli.html#extract_tgz', 'nbdev/cli.py'),
                           'nbdev.cli.nbdev_filter': ('cli.html#nbdev_filter', 'nbdev/cli.py'),
                           'nbdev.cli.nbdev_new': ('cli.html#nbdev_new', 'nbdev/cli.py')},
            'nbdev.config': { 'nbdev.config._apply_defaults': ('config.html#_apply_defaults', 'nbdev/config.py'),
                              'nbdev.config._basic_export_nb': ('config.html#_basic_export_nb', 'nbdev/config.py'),
                              'nbdev.config._cfg2txt': ('config.html#_cfg2txt', 'nbdev/config.py'),
                              'nbdev.config._fetch_from_git': ('config.html#_fetch_from_git', 'nbdev/config.py'),
                              'nbdev.config._get_info': ('config.html#_get_info', 'nbdev/config.py'),
                              'nbdev.config._git_repo': ('config.html#_git_repo', 'nbdev/config.py'),
                              'nbdev.config._has_py': ('config.html#_has_py', 'nbdev/config.py'),
                              'nbdev.config._nbdev_config_file': ('config.html#_nbdev_config_file', 'nbdev/config.py'),
                              'nbdev.config._prompt_user': ('config.html#_prompt_user', 'nbdev/config.py'),
                              'nbdev.config._xdg_config_paths': ('config.html#_xdg_config_paths', 'nbdev/config.py'),
                              'nbdev.config.add_init': ('config.html#add_init', 'nbdev/config.py'),
                              'nbdev.config.config_key': ('config.html#config_key', 'nbdev/config.py'),
                              'nbdev.config.create_output': ('config.html#create_output', 'nbdev/config.py'),
                              'nbdev.config.get_config': ('config.html#get_config', 'nbdev/config.py'),
                              'nbdev.config.nbdev_create_config': ('config.html#nbdev_create_config', 'nbdev/config.py'),
                              'nbdev.config.show_src': ('config.html#show_src', 'nbdev/config.py'),
                              'nbdev.config.update_version': ('config.html#update_version', 'nbdev/config.py'),
                              'nbdev.config.write_cells': ('config.html#write_cells', 'nbdev/config.py')},
            'nbdev.doclinks': { 'nbdev.doclinks.NbdevLookup': ('doclinks.html#nbdevlookup', 'nbdev/doclinks.py'),
                                'nbdev.doclinks.NbdevLookup.__getitem__': ('doclinks.html#__getitem__', 'nbdev/doclinks.py'),
                                'nbdev.doclinks.NbdevLookup.__init__': ('doclinks.html#__init__', 'nbdev/doclinks.py'),
                                'nbdev.doclinks.NbdevLookup._link_sym': ('doclinks.html#_link_sym', 'nbdev/doclinks.py'),
                                'nbdev.doclinks.NbdevLookup.code': ('doclinks.html#code', 'nbdev/doclinks.py'),
                                'nbdev.doclinks.NbdevLookup.doc': ('doclinks.html#doc', 'nbdev/doclinks.py'),
                                'nbdev.doclinks.NbdevLookup.link_line': ('doclinks.html#link_line', 'nbdev/doclinks.py'),
                                'nbdev.doclinks.NbdevLookup.linkify': ('doclinks.html#linkify', 'nbdev/doclinks.py'),
                                'nbdev.doclinks._binop_leafs': ('doclinks.html#_binop_leafs', 'nbdev/doclinks.py'),
                                'nbdev.doclinks._build_modidx': ('doclinks.html#_build_modidx', 'nbdev/doclinks.py'),
                                'nbdev.doclinks._find_mod': ('doclinks.html#_find_mod', 'nbdev/doclinks.py'),
                                'nbdev.doclinks._get_exps': ('doclinks.html#_get_exps', 'nbdev/doclinks.py'),
                                'nbdev.doclinks._get_modidx': ('doclinks.html#_get_modidx', 'nbdev/doclinks.py'),
                                'nbdev.doclinks._lineno': ('doclinks.html#_lineno', 'nbdev/doclinks.py'),
                                'nbdev.doclinks._qual_mod': ('doclinks.html#_qual_mod', 'nbdev/doclinks.py'),
                                'nbdev.doclinks._qual_sym': ('doclinks.html#_qual_sym', 'nbdev/doclinks.py'),
                                'nbdev.doclinks._qual_syms': ('doclinks.html#_qual_syms', 'nbdev/doclinks.py'),
                                'nbdev.doclinks._sym_nm': ('doclinks.html#_sym_nm', 'nbdev/doclinks.py'),
                                'nbdev.doclinks.nbdev_export': ('doclinks.html#nbdev_export', 'nbdev/doclinks.py'),
                                'nbdev.doclinks.nbglob': ('doclinks.html#nbglob', 'nbdev/doclinks.py'),
                                'nbdev.doclinks.nbglob_cli': ('doclinks.html#nbglob_cli', 'nbdev/doclinks.py'),
                                'nbdev.doclinks.patch_name': ('doclinks.html#patch_name', 'nbdev/doclinks.py')},
            'nbdev.export': { 'nbdev.export.ExportModuleProc': ('export.html#exportmoduleproc', 'nbdev/export.py'),
                              'nbdev.export.ExportModuleProc._default_exp_': ('export.html#_default_exp_', 'nbdev/export.py'),
                              'nbdev.export.ExportModuleProc._export_': ('export.html#_export_', 'nbdev/export.py'),
                              'nbdev.export.ExportModuleProc._exporti_': ('export.html#_exporti_', 'nbdev/export.py'),
                              'nbdev.export.ExportModuleProc.begin': ('export.html#begin', 'nbdev/export.py'),
                              'nbdev.export.black_format': ('export.html#black_format', 'nbdev/export.py'),
                              'nbdev.export.nb_export': ('export.html#nb_export', 'nbdev/export.py')},
            'nbdev.extract_attachments': {},
            'nbdev.frontmatter': { 'nbdev.frontmatter.FrontmatterProc': ('frontmatter.html#frontmatterproc', 'nbdev/frontmatter.py'),
                                   'nbdev.frontmatter.FrontmatterProc._default_exp_': ( 'frontmatter.html#_default_exp_',
                                                                                        'nbdev/frontmatter.py'),
                                   'nbdev.frontmatter.FrontmatterProc._update': ('frontmatter.html#_update', 'nbdev/frontmatter.py'),
                                   'nbdev.frontmatter.FrontmatterProc.begin': ('frontmatter.html#begin', 'nbdev/frontmatter.py'),
                                   'nbdev.frontmatter.FrontmatterProc.cell': ('frontmatter.html#cell', 'nbdev/frontmatter.py'),
                                   'nbdev.frontmatter.FrontmatterProc.end': ('frontmatter.html#end', 'nbdev/frontmatter.py'),
                                   'nbdev.frontmatter._dict2fm': ('frontmatter.html#_dict2fm', 'nbdev/frontmatter.py'),
                                   'nbdev.frontmatter._fm2dict': ('frontmatter.html#_fm2dict', 'nbdev/frontmatter.py'),
                                   'nbdev.frontmatter._insertfm': ('frontmatter.html#_insertfm', 'nbdev/frontmatter.py'),
                                   'nbdev.frontmatter._md2dict': ('frontmatter.html#_md2dict', 'nbdev/frontmatter.py')},
            'nbdev.imports': {},
            'nbdev.maker': { 'nbdev.maker.ModuleMaker': ('maker.html#modulemaker', 'nbdev/maker.py'),
                             'nbdev.maker.ModuleMaker.__init__': ('maker.html#__init__', 'nbdev/maker.py'),
                             'nbdev.maker.ModuleMaker._last_future': ('maker.html#modulemaker._last_future', 'nbdev/maker.py'),
                             'nbdev.maker.ModuleMaker._make_exists': ('maker.html#modulemaker._make_exists', 'nbdev/maker.py'),
                             'nbdev.maker.ModuleMaker._update_all': ('maker.html#modulemaker._update_all', 'nbdev/maker.py'),
                             'nbdev.maker.ModuleMaker.make': ('maker.html#modulemaker.make', 'nbdev/maker.py'),
                             'nbdev.maker.ModuleMaker.make_all': ('maker.html#modulemaker.make_all', 'nbdev/maker.py'),
                             'nbdev.maker.NbCell.import2relative': ('maker.html#nbcell.import2relative', 'nbdev/maker.py'),
                             'nbdev.maker._all_targets': ('maker.html#_all_targets', 'nbdev/maker.py'),
                             'nbdev.maker._basic_export_nb2': ('maker.html#_basic_export_nb2', 'nbdev/maker.py'),
                             'nbdev.maker._filt_dec': ('maker.html#_filt_dec', 'nbdev/maker.py'),
                             'nbdev.maker._import2relative': ('maker.html#_import2relative', 'nbdev/maker.py'),
                             'nbdev.maker._mark_text_ranges': ('maker.html#_mark_text_ranges', 'nbdev/maker.py'),
                             'nbdev.maker._retr_mdoc': ('maker.html#_retr_mdoc', 'nbdev/maker.py'),
                             'nbdev.maker._targets': ('maker.html#_targets', 'nbdev/maker.py'),
                             'nbdev.maker._val_or_id': ('maker.html#_val_or_id', 'nbdev/maker.py'),
                             'nbdev.maker._wants': ('maker.html#_wants', 'nbdev/maker.py'),
                             'nbdev.maker.decor_id': ('maker.html#decor_id', 'nbdev/maker.py'),
                             'nbdev.maker.find_var': ('maker.html#find_var', 'nbdev/maker.py'),
                             'nbdev.maker.make_code_cells': ('maker.html#make_code_cells', 'nbdev/maker.py'),
                             'nbdev.maker.read_var': ('maker.html#read_var', 'nbdev/maker.py'),
                             'nbdev.maker.relative_import': ('maker.html#relative_import', 'nbdev/maker.py'),
                             'nbdev.maker.update_import': ('maker.html#update_import', 'nbdev/maker.py'),
                             'nbdev.maker.update_var': ('maker.html#update_var', 'nbdev/maker.py')},
            'nbdev.merge': { 'nbdev.merge._git_branch_merge': ('merge.html#_git_branch_merge', 'nbdev/merge.py'),
                             'nbdev.merge._git_merge_file': ('merge.html#_git_merge_file', 'nbdev/merge.py'),
                             'nbdev.merge._git_rebase_head': ('merge.html#_git_rebase_head', 'nbdev/merge.py'),
                             'nbdev.merge._make_conflict': ('merge.html#_make_conflict', 'nbdev/merge.py'),
                             'nbdev.merge._make_md': ('merge.html#_make_md', 'nbdev/merge.py'),
                             'nbdev.merge._merge_cells': ('merge.html#_merge_cells', 'nbdev/merge.py'),
                             'nbdev.merge._unpatch_f': ('merge.html#_unpatch_f', 'nbdev/merge.py'),
                             'nbdev.merge.nbdev_fix': ('merge.html#nbdev_fix', 'nbdev/merge.py'),
                             'nbdev.merge.nbdev_merge': ('merge.html#nbdev_merge', 'nbdev/merge.py'),
                             'nbdev.merge.unpatch': ('merge.html#unpatch', 'nbdev/merge.py')},
            'nbdev.migrate': { 'nbdev.migrate.MigrateProc': ('migrate.html#migrateproc', 'nbdev/migrate.py'),
                               'nbdev.migrate.MigrateProc.begin': ('migrate.html#begin', 'nbdev/migrate.py'),
                               'nbdev.migrate._cat_slug': ('migrate.html#_cat_slug', 'nbdev/migrate.py'),
                               'nbdev.migrate._co': ('migrate.html#_co', 'nbdev/migrate.py'),
                               'nbdev.migrate._convert_callout': ('migrate.html#_convert_callout', 'nbdev/migrate.py'),
                               'nbdev.migrate._file_slug': ('migrate.html#_file_slug', 'nbdev/migrate.py'),
                               'nbdev.migrate._fp_convert': ('migrate.html#_fp_convert', 'nbdev/migrate.py'),
                               'nbdev.migrate._fp_fm': ('migrate.html#_fp_fm', 'nbdev/migrate.py'),
                               'nbdev.migrate._fp_image': ('migrate.html#_fp_image', 'nbdev/migrate.py'),
                               'nbdev.migrate._is_jekyll_post': ('migrate.html#_is_jekyll_post', 'nbdev/migrate.py'),
                               'nbdev.migrate._re_v1': ('migrate.html#_re_v1', 'nbdev/migrate.py'),
                               'nbdev.migrate._repl_directives': ('migrate.html#_repl_directives', 'nbdev/migrate.py'),
                               'nbdev.migrate._repl_v1callouts': ('migrate.html#_repl_v1callouts', 'nbdev/migrate.py'),
                               'nbdev.migrate._repl_v1dir': ('migrate.html#_repl_v1dir', 'nbdev/migrate.py'),
                               'nbdev.migrate._replace_fm': ('migrate.html#_replace_fm', 'nbdev/migrate.py'),
                               'nbdev.migrate._subv1': ('migrate.html#_subv1', 'nbdev/migrate.py'),
                               'nbdev.migrate.fp_md_fm': ('migrate.html#fp_md_fm', 'nbdev/migrate.py'),
                               'nbdev.migrate.fp_nb_fm': ('migrate.html#fp_nb_fm', 'nbdev/migrate.py'),
                               'nbdev.migrate.migrate_md': ('migrate.html#migrate_md', 'nbdev/migrate.py'),
                               'nbdev.migrate.migrate_nb': ('migrate.html#migrate_nb', 'nbdev/migrate.py'),
                               'nbdev.migrate.nbdev_migrate': ('migrate.html#nbdev_migrate', 'nbdev/migrate.py')},
            'nbdev.mkdocs': {},
            'nbdev.process': { 'nbdev.process.NBProcessor': ('process.html#nbprocessor', 'nbdev/process.py'),
                               'nbdev.process.NBProcessor.__init__': ('process.html#__init__', 'nbdev/process.py'),
                               'nbdev.process.NBProcessor._proc': ('process.html#_proc', 'nbdev/process.py'),
                               'nbdev.process.NBProcessor._process_cell': ('process.html#_process_cell', 'nbdev/process.py'),
                               'nbdev.process.NBProcessor._process_comment': ('process.html#_process_comment', 'nbdev/process.py'),
                               'nbdev.process.NBProcessor.process': ('process.html#process', 'nbdev/process.py'),
                               'nbdev.process.Processor': ('process.html#processor', 'nbdev/process.py'),
                               'nbdev.process.Processor.__call__': ('process.html#__call__', 'nbdev/process.py'),
                               'nbdev.process.Processor.__init__': ('process.html#__init__', 'nbdev/process.py'),
                               'nbdev.process.Processor.cell': ('process.html#cell', 'nbdev/process.py'),
                               'nbdev.process._dir_pre': ('process.html#_dir_pre', 'nbdev/process.py'),
                               'nbdev.process._directive': ('process.html#_directive', 'nbdev/process.py'),
                               'nbdev.process._is_direc': ('process.html#_is_direc', 'nbdev/process.py'),
                               'nbdev.process._mk_procs': ('process.html#_mk_procs', 'nbdev/process.py'),
                               'nbdev.process._norm_quarto': ('process.html#_norm_quarto', 'nbdev/process.py'),
                               'nbdev.process._quarto_re': ('process.html#_quarto_re', 'nbdev/process.py'),
                               'nbdev.process.extract_directives': ('process.html#extract_directives', 'nbdev/process.py'),
                               'nbdev.process.first_code_ln': ('process.html#first_code_ln', 'nbdev/process.py'),
                               'nbdev.process.instantiate': ('process.html#instantiate', 'nbdev/process.py'),
                               'nbdev.process.nb_lang': ('process.html#nb_lang', 'nbdev/process.py'),
                               'nbdev.process.opt_set': ('process.html#opt_set', 'nbdev/process.py')},
            'nbdev.processors': { 'nbdev.processors.FilterDefaults': ('processors.html#filterdefaults', 'nbdev/processors.py'),
                                  'nbdev.processors.FilterDefaults.__call__': ('processors.html#__call__', 'nbdev/processors.py'),
                                  'nbdev.processors.FilterDefaults.base_procs': ('processors.html#base_procs', 'nbdev/processors.py'),
                                  'nbdev.processors.FilterDefaults.nb_proc': ('processors.html#nb_proc', 'nbdev/processors.py'),
                                  'nbdev.processors.FilterDefaults.procs': ('processors.html#procs', 'nbdev/processors.py'),
                                  'nbdev.processors.FilterDefaults.xtra_procs': ('processors.html#xtra_procs', 'nbdev/processors.py'),
                                  'nbdev.processors._ast_contains': ('processors.html#_ast_contains', 'nbdev/processors.py'),
                                  'nbdev.processors._def_names': ('processors.html#_def_names', 'nbdev/processors.py'),
                                  'nbdev.processors._default_exp': ('processors.html#_default_exp', 'nbdev/processors.py'),
                                  'nbdev.processors._do_eval': ('processors.html#_do_eval', 'nbdev/processors.py'),
                                  'nbdev.processors._get_nm': ('processors.html#_get_nm', 'nbdev/processors.py'),
                                  'nbdev.processors._is_showdoc': ('processors.html#_is_showdoc', 'nbdev/processors.py'),
                                  'nbdev.processors._re_hideline': ('processors.html#_re_hideline', 'nbdev/processors.py'),
                                  'nbdev.processors._show_docs': ('processors.html#_show_docs', 'nbdev/processors.py'),
                                  'nbdev.processors._want_doc': ('processors.html#_want_doc', 'nbdev/processors.py'),
                                  'nbdev.processors.add_links': ('processors.html#add_links', 'nbdev/processors.py'),
                                  'nbdev.processors.add_show_docs': ('processors.html#add_show_docs', 'nbdev/processors.py'),
                                  'nbdev.processors.add_show_docs.begin': ('processors.html#begin', 'nbdev/processors.py'),
                                  'nbdev.processors.cell_lang': ('processors.html#cell_lang', 'nbdev/processors.py'),
                                  'nbdev.processors.clean_magics': ('processors.html#clean_magics', 'nbdev/processors.py'),
                                  'nbdev.processors.clean_show_doc': ('processors.html#clean_show_doc', 'nbdev/processors.py'),
                                  'nbdev.processors.exec_show_docs': ('processors.html#exec_show_docs', 'nbdev/processors.py'),
                                  'nbdev.processors.exec_show_docs.__call__': ('processors.html#__call__', 'nbdev/processors.py'),
                                  'nbdev.processors.exec_show_docs.begin': ('processors.html#begin', 'nbdev/processors.py'),
                                  'nbdev.processors.filter_stream_': ('processors.html#filter_stream_', 'nbdev/processors.py'),
                                  'nbdev.processors.hide_': ('processors.html#hide_', 'nbdev/processors.py'),
                                  'nbdev.processors.hide_line': ('processors.html#hide_line', 'nbdev/processors.py'),
                                  'nbdev.processors.insert_warning': ('processors.html#insert_warning', 'nbdev/processors.py'),
                                  'nbdev.processors.insert_warning.begin': ('processors.html#begin', 'nbdev/processors.py'),
                                  'nbdev.processors.populate_language': ('processors.html#populate_language', 'nbdev/processors.py'),
                                  'nbdev.processors.populate_language.begin': ('processors.html#begin', 'nbdev/processors.py'),
                                  'nbdev.processors.populate_language.cell': ('processors.html#cell', 'nbdev/processors.py'),
                                  'nbdev.processors.rm_export': ('processors.html#rm_export', 'nbdev/processors.py'),
                                  'nbdev.processors.rm_header_dash': ('processors.html#rm_header_dash', 'nbdev/processors.py'),
                                  'nbdev.processors.strip_ansi': ('processors.html#strip_ansi', 'nbdev/processors.py'),
                                  'nbdev.processors.strip_hidden_metadata': ( 'processors.html#strip_hidden_metadata',
                                                                              'nbdev/processors.py')},
            'nbdev.qmd': { 'nbdev.qmd.btn': ('qmd.html#btn', 'nbdev/qmd.py'),
                           'nbdev.qmd.div': ('qmd.html#div', 'nbdev/qmd.py'),
                           'nbdev.qmd.img': ('qmd.html#img', 'nbdev/qmd.py'),
                           'nbdev.qmd.meta': ('qmd.html#meta', 'nbdev/qmd.py')},
            'nbdev.quarto': { 'nbdev.quarto._ensure_quarto': ('quarto.html#_ensure_quarto', 'nbdev/quarto.py'),
                              'nbdev.quarto._install_linux': ('quarto.html#_install_linux', 'nbdev/quarto.py'),
                              'nbdev.quarto._install_mac': ('quarto.html#_install_mac', 'nbdev/quarto.py'),
                              'nbdev.quarto._nbglob_docs': ('quarto.html#_nbglob_docs', 'nbdev/quarto.py'),
                              'nbdev.quarto._pre': ('quarto.html#_pre', 'nbdev/quarto.py'),
                              'nbdev.quarto._pre_docs': ('quarto.html#_pre_docs', 'nbdev/quarto.py'),
                              'nbdev.quarto._sort': ('quarto.html#_sort', 'nbdev/quarto.py'),
                              'nbdev.quarto._sprun': ('quarto.html#_sprun', 'nbdev/quarto.py'),
                              'nbdev.quarto.deploy': ('quarto.html#deploy', 'nbdev/quarto.py'),
                              'nbdev.quarto.fs_watchdog': ('quarto.html#fs_watchdog', 'nbdev/quarto.py'),
                              'nbdev.quarto.install': ('quarto.html#install', 'nbdev/quarto.py'),
                              'nbdev.quarto.install_quarto': ('quarto.html#install_quarto', 'nbdev/quarto.py'),
                              'nbdev.quarto.nbdev_docs': ('quarto.html#nbdev_docs', 'nbdev/quarto.py'),
                              'nbdev.quarto.nbdev_preview': ('quarto.html#nbdev_preview', 'nbdev/quarto.py'),
                              'nbdev.quarto.nbdev_readme': ('quarto.html#nbdev_readme', 'nbdev/quarto.py'),
                              'nbdev.quarto.nbdev_sidebar': ('quarto.html#nbdev_sidebar', 'nbdev/quarto.py'),
                              'nbdev.quarto.prepare': ('quarto.html#prepare', 'nbdev/quarto.py'),
                              'nbdev.quarto.refresh_quarto_yml': ('quarto.html#refresh_quarto_yml', 'nbdev/quarto.py')},
            'nbdev.read': { 'nbdev.read._apply_defaults': ('API/config.html#_apply_defaults', 'nbdev/read.py'),
                            'nbdev.read._basic_export_nb': ('API/config.html#_basic_export_nb', 'nbdev/read.py'),
                            'nbdev.read._cfg2txt': ('API/config.html#_cfg2txt', 'nbdev/read.py'),
                            'nbdev.read._fetch_from_git': ('API/config.html#_fetch_from_git', 'nbdev/read.py'),
                            'nbdev.read._get_info': ('API/config.html#_get_info', 'nbdev/read.py'),
                            'nbdev.read._git_repo': ('API/config.html#_git_repo', 'nbdev/read.py'),
                            'nbdev.read._has_py': ('API/config.html#_has_py', 'nbdev/read.py'),
                            'nbdev.read._nbdev_config_file': ('API/config.html#_nbdev_config_file', 'nbdev/read.py'),
                            'nbdev.read._prompt_user': ('API/config.html#_prompt_user', 'nbdev/read.py'),
                            'nbdev.read._xdg_config_paths': ('API/config.html#_xdg_config_paths', 'nbdev/read.py'),
                            'nbdev.read.add_init': ('API/config.html#add_init', 'nbdev/read.py'),
                            'nbdev.read.config_key': ('API/config.html#config_key', 'nbdev/read.py'),
                            'nbdev.read.create_output': ('API/config.html#create_output', 'nbdev/read.py'),
                            'nbdev.read.get_config': ('API/config.html#get_config', 'nbdev/read.py'),
                            'nbdev.read.nbdev_create_config': ('API/config.html#nbdev_create_config', 'nbdev/read.py'),
                            'nbdev.read.show_src': ('API/config.html#show_src', 'nbdev/read.py'),
                            'nbdev.read.update_version': ('API/config.html#update_version', 'nbdev/read.py'),
                            'nbdev.read.write_cells': ('API/config.html#write_cells', 'nbdev/read.py')},
            'nbdev.release': { 'nbdev.release.Release': ('release.html#release', 'nbdev/release.py'),
                               'nbdev.release.Release.__init__': ('release.html#__init__', 'nbdev/release.py'),
                               'nbdev.release.Release._issue_groups': ('release.html#_issue_groups', 'nbdev/release.py'),
                               'nbdev.release.Release._issues': ('release.html#_issues', 'nbdev/release.py'),
                               'nbdev.release.Release.changelog': ('release.html#release.changelog', 'nbdev/release.py'),
                               'nbdev.release.Release.latest_notes': ('release.html#release.latest_notes', 'nbdev/release.py'),
                               'nbdev.release.Release.release': ('release.html#release.release', 'nbdev/release.py'),
                               'nbdev.release._find_config': ('release.html#_find_config', 'nbdev/release.py'),
                               'nbdev.release._get_conda_meta': ('release.html#_get_conda_meta', 'nbdev/release.py'),
                               'nbdev.release._issue_txt': ('release.html#_issue_txt', 'nbdev/release.py'),
                               'nbdev.release._issues_txt': ('release.html#_issues_txt', 'nbdev/release.py'),
                               'nbdev.release._load_json': ('release.html#_load_json', 'nbdev/release.py'),
                               'nbdev.release._run': ('release.html#_run', 'nbdev/release.py'),
                               'nbdev.release._write_yaml': ('release.html#_write_yaml', 'nbdev/release.py'),
                               'nbdev.release.anaconda_upload': ('release.html#anaconda_upload', 'nbdev/release.py'),
                               'nbdev.release.bump_version': ('release.html#bump_version', 'nbdev/release.py'),
                               'nbdev.release.changelog': ('release.html#changelog', 'nbdev/release.py'),
                               'nbdev.release.chk_conda_rel': ('release.html#chk_conda_rel', 'nbdev/release.py'),
                               'nbdev.release.conda_output_path': ('release.html#conda_output_path', 'nbdev/release.py'),
                               'nbdev.release.latest_pypi': ('release.html#latest_pypi', 'nbdev/release.py'),
                               'nbdev.release.nbdev_bump_version': ('release.html#nbdev_bump_version', 'nbdev/release.py'),
                               'nbdev.release.pypi_details': ('release.html#pypi_details', 'nbdev/release.py'),
                               'nbdev.release.pypi_json': ('release.html#pypi_json', 'nbdev/release.py'),
                               'nbdev.release.release_both': ('release.html#release_both', 'nbdev/release.py'),
                               'nbdev.release.release_conda': ('release.html#release_conda', 'nbdev/release.py'),
                               'nbdev.release.release_gh': ('release.html#release_gh', 'nbdev/release.py'),
                               'nbdev.release.release_git': ('release.html#release_git', 'nbdev/release.py'),
                               'nbdev.release.release_pypi': ('release.html#release_pypi', 'nbdev/release.py'),
                               'nbdev.release.write_conda_meta': ('release.html#write_conda_meta', 'nbdev/release.py')},
            'nbdev.serve': { 'nbdev.serve._exec_py': ('serve.html#_exec_py', 'nbdev/serve.py'),
                             'nbdev.serve._is_qpy': ('serve.html#_is_qpy', 'nbdev/serve.py'),
                             'nbdev.serve._proc_file': ('serve.html#_proc_file', 'nbdev/serve.py'),
                             'nbdev.serve.proc_nbs': ('serve.html#proc_nbs', 'nbdev/serve.py')},
            'nbdev.serve_drv': {},
            'nbdev.showdoc': { 'nbdev.showdoc.BasicHtmlRenderer': ('showdoc.html#basichtmlrenderer', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.BasicHtmlRenderer._repr_html_': ('showdoc.html#_repr_html_', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.BasicHtmlRenderer.doc': ('showdoc.html#doc', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.BasicMarkdownRenderer': ('showdoc.html#basicmarkdownrenderer', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.BasicMarkdownRenderer._repr_markdown_': ('showdoc.html#_repr_markdown_', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.DocmentTbl': ('showdoc.html#docmenttbl', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.DocmentTbl.__eq__': ('showdoc.html#__eq__', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.DocmentTbl.__init__': ('showdoc.html#__init__', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.DocmentTbl._columns': ('showdoc.html#_columns', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.DocmentTbl._hdr_list': ('showdoc.html#_hdr_list', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.DocmentTbl._repr_markdown_': ('showdoc.html#_repr_markdown_', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.DocmentTbl._row': ('showdoc.html#_row', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.DocmentTbl._row_list': ('showdoc.html#_row_list', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.DocmentTbl.has_docment': ('showdoc.html#has_docment', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.DocmentTbl.has_return': ('showdoc.html#has_return', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.DocmentTbl.hdr_str': ('showdoc.html#hdr_str', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.DocmentTbl.params_str': ('showdoc.html#params_str', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.DocmentTbl.return_str': ('showdoc.html#return_str', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.ShowDocRenderer': ('showdoc.html#showdocrenderer', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.ShowDocRenderer.__init__': ('showdoc.html#__init__', 'nbdev/showdoc.py'),
                               'nbdev.showdoc._bold': ('showdoc.html#_bold', 'nbdev/showdoc.py'),
                               'nbdev.showdoc._docstring': ('showdoc.html#_docstring', 'nbdev/showdoc.py'),
                               'nbdev.showdoc._escape_markdown': ('showdoc.html#_escape_markdown', 'nbdev/showdoc.py'),
                               'nbdev.showdoc._ext_link': ('showdoc.html#_ext_link', 'nbdev/showdoc.py'),
                               'nbdev.showdoc._f_name': ('showdoc.html#_f_name', 'nbdev/showdoc.py'),
                               'nbdev.showdoc._fmt_anno': ('showdoc.html#_fmt_anno', 'nbdev/showdoc.py'),
                               'nbdev.showdoc._fmt_sig': ('showdoc.html#_fmt_sig', 'nbdev/showdoc.py'),
                               'nbdev.showdoc._fullname': ('showdoc.html#_fullname', 'nbdev/showdoc.py'),
                               'nbdev.showdoc._html_link': ('showdoc.html#_html_link', 'nbdev/showdoc.py'),
                               'nbdev.showdoc._list2row': ('showdoc.html#_list2row', 'nbdev/showdoc.py'),
                               'nbdev.showdoc._maybe_nm': ('showdoc.html#_maybe_nm', 'nbdev/showdoc.py'),
                               'nbdev.showdoc._non_empty_keys': ('showdoc.html#_non_empty_keys', 'nbdev/showdoc.py'),
                               'nbdev.showdoc._show_param': ('showdoc.html#_show_param', 'nbdev/showdoc.py'),
                               'nbdev.showdoc._wrap_sig': ('showdoc.html#_wrap_sig', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.colab_link': ('showdoc.html#colab_link', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.doc': ('showdoc.html#doc', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.show_doc': ('showdoc.html#show_doc', 'nbdev/showdoc.py'),
                               'nbdev.showdoc.showdoc_nm': ('showdoc.html#showdoc_nm', 'nbdev/showdoc.py')},
            'nbdev.sync': { 'nbdev.sync._get_call': ('sync.html#_get_call', 'nbdev/sync.py'),
                            'nbdev.sync._mod_files': ('sync.html#_mod_files', 'nbdev/sync.py'),
                            'nbdev.sync._script2notebook': ('sync.html#_script2notebook', 'nbdev/sync.py'),
                            'nbdev.sync._to_absolute': ('sync.html#_to_absolute', 'nbdev/sync.py'),
                            'nbdev.sync._update_lib': ('sync.html#_update_lib', 'nbdev/sync.py'),
                            'nbdev.sync.absolute_import': ('sync.html#absolute_import', 'nbdev/sync.py'),
                            'nbdev.sync.nbdev_update': ('sync.html#nbdev_update', 'nbdev/sync.py')},
            'nbdev.test': { 'nbdev.test._keep_file': ('test.html#_keep_file', 'nbdev/test.py'),
                            'nbdev.test.nbdev_test': ('test.html#nbdev_test', 'nbdev/test.py'),
                            'nbdev.test.test_nb': ('test.html#test_nb', 'nbdev/test.py')}}}